"use strict";(self.webpackChunktechnical_tutorial=self.webpackChunktechnical_tutorial||[]).push([[2911],{3067:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>i});var r=t(6070),o=t(5296);const a={},s="Add Redux to React Native",d={id:"software-development/frontend/reactnative/add-redux-to-react-native",title:"Add Redux to React Native",description:"Step 1: Installation",source:"@site/docs/software-development/frontend/reactnative/add-redux-to-react-native.md",sourceDirName:"software-development/frontend/reactnative",slug:"/software-development/frontend/reactnative/add-redux-to-react-native",permalink:"/TechnicalTutorial/docs/software-development/frontend/reactnative/add-redux-to-react-native",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"softwareDevlopmentSidebar",previous:{title:"Setup ESLint, Prettier, commitlint, lint-staged and Husky v7 pre-commit and commit-msg git hooks for a ReactJS Project with VSCode Editor from scratch",permalink:"/TechnicalTutorial/docs/software-development/frontend/reactjs/eslint-prettier-reactjs"},next:{title:"Create Theme for React Native App",permalink:"/TechnicalTutorial/docs/software-development/frontend/reactnative/create-theme-for-react-native-app"}},c={},i=[{value:"Step 1: Installation",id:"step-1-installation",level:2},{value:"Step 2: Create redux relative folders in the project",id:"step-2-create-redux-relative-folders-in-the-project",level:2},{value:"Step 3: Create relative elements in each folder",id:"step-3-create-relative-elements-in-each-folder",level:2},{value:"Step 4: Debug Redux with Redux Devtools Extension",id:"step-4-debug-redux-with-redux-devtools-extension",level:2},{value:"Other ways to support Redux <code>Devtools Extension</code> in react-native project.",id:"other-ways-to-support-redux-devtools-extension-in-react-native-project",level:3},{value:"In more general way, use <code>remote-redux-devtools</code> to debug redux in the react-native project.",id:"in-more-general-way-use-remote-redux-devtools-to-debug-redux-in-the-react-native-project",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"add-redux-to-react-native",children:"Add Redux to React Native"})}),"\n",(0,r.jsx)(n.h2,{id:"step-1-installation",children:"Step 1: Installation"}),"\n",(0,r.jsx)(n.p,{children:"Install redux and react-redux packages."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install redux react-redux\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-2-create-redux-relative-folders-in-the-project",children:"Step 2: Create redux relative folders in the project"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\ud83d\udce6src\n \u2523 \ud83d\udcc2store\n    \u2523 \ud83d\udcc2actions\n    \u2503 \u2517 \ud83d\udcdcauth.js\n    \u2523 \ud83d\udcc2constants\n    \u2503 \u2517 \ud83d\udcdcauth.js\n    \u2523 \ud83d\udcc2reducers\n    \u2503 \u2517 \ud83d\udcdcauth.js\n    \u2517 \ud83d\udcdcconfigStore.js\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-3-create-relative-elements-in-each-folder",children:"Step 3: Create relative elements in each folder"}),"\n",(0,r.jsx)(n.p,{children:"For example, if we want to use redux to record if an user is login the app, we can:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create an ",(0,r.jsx)(n.code,{children:"auth.js"})," file under ",(0,r.jsx)(n.code,{children:"constants"}),", ",(0,r.jsx)(n.code,{children:"actions"})," and ",(0,r.jsx)(n.code,{children:"reducers"})," folders."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In the ",(0,r.jsx)(n.code,{children:"constants/auth.js"})," file, we add two variables"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const LOGIN = 'LOGIN';\nconst LOGOUT = 'LOGOUT';\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In the ",(0,r.jsx)(n.code,{children:"actions/auth.js"})," file, we create two actions for user to ",(0,r.jsx)(n.code,{children:"login/logout"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { LOGIN, LOGOUT } from '../constants/auth';\n\nexport const login = (userInfo) => {\n  return {\n    type: LOGIN,\n    payload: userInfo,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In the ",(0,r.jsx)(n.code,{children:"reducers/auth.js"})," file, we create a reducer to handle the state change request from actions based on constant types."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { LOGIN, LOGOUT } from '../constants/auth';\n\nconst initialState = {\n  username: null,\n  token: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        username: action.payload.username,\n        token: action.payload.token,\n      };\n    case LOGOUT:\n      return {\n        username: null,\n        token: null,\n      };\n    default:\n      return initialState;\n  }\n};\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Initialize a redux store for the whole app. At the root of store folder, we add a ",(0,r.jsx)(n.code,{children:"configStore.js"})," file and add below code."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { createStore, combineReducers } from 'redux';\nimport authReducer from './reducers/auth';\n\nconst rootReducer = combineReducers({ auth: authReducer });\n\nexport default () => {\n  return createStore(rootReducer);\n};\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In the ",(0,r.jsx)(n.code,{children:"App.js"})," file to ",(0,r.jsx)(n.code,{children:"import"})," the ",(0,r.jsx)(n.code,{children:"configStore"}),", and put the configured store to the react-redux ",(0,r.jsx)(n.code,{children:"Provider"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"step-4-debug-redux-with-redux-devtools-extension",children:["Step 4: Debug Redux with ",(0,r.jsx)(n.a,{href:"https://github.com/zalmoxisus/redux-devtools-extension",children:"Redux Devtools Extension"})]}),"\n",(0,r.jsxs)(n.p,{children:["Install the corresponding ",(0,r.jsx)(n.code,{children:"Redux Devtools Extension"})," browser plugin."]}),"\n",(0,r.jsx)(n.p,{children:"Install the redux-devtools-extension"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"npm install --save redux-devtools-extension\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For the case where you don't include other enhancers and middlewares, just use ",(0,r.jsx)(n.code,{children:"devToolsEnhancer"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport authReducer from './reducers/auth';\n\nconst rootReducer = combineReducers({ auth: authReducer });\n\nexport default () => {\n  return createStore(rootReducer, devToolsEnhancer());\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For the case where you use other enhancers and middlewares like ",(0,r.jsx)(n.code,{children:"redux-thunk"}),", use ",(0,r.jsx)(n.code,{children:"applyMiddleware"})," and ",(0,r.jsx)(n.code,{children:"composeWithDevTools"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport authReducer from './reducers/auth';\n\nconst rootReducer = combineReducers({ auth: authReducer });\n\nexport default () => {\n  return createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(ReduxThunk))\n  );\n};\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"other-ways-to-support-redux-devtools-extension-in-react-native-project",children:["Other ways to support Redux ",(0,r.jsx)(n.code,{children:"Devtools Extension"})," in react-native project."]}),"\n",(0,r.jsx)(n.p,{children:"For a basic Redux store simply add:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:" const store = createStore(\n   reducer, /* preloadedState, */\n+  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n );\n"})}),"\n",(0,r.jsx)(n.p,{children:"If you setup your store with middleware and enhancers, change:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-diff",children:"  import { createStore, applyMiddleware, compose } from 'redux';\n\n+ const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n+ const store = createStore(reducer, /* preloadedState, */ composeEnhancers(\n- const store = createStore(reducer, /* preloadedState, */ compose(\n    applyMiddleware(...middleware)\n  ));\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"in-more-general-way-use-remote-redux-devtools-to-debug-redux-in-the-react-native-project",children:["In more general way, use ",(0,r.jsx)(n.a,{href:"https://github.com/zalmoxisus/remote-redux-devtools",children:(0,r.jsx)(n.code,{children:"remote-redux-devtools"})})," to debug redux in the react-native project."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},5296:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var r=t(758);const o={},a=r.createContext(o);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);